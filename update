#!/bin/bash

# Load source and destination paths
source paths.sh

# Exits if the working directory is not in a git repo 
ensure_in_git_repo()
{
	if ! git rev-parse --is-inside-work-tree &>/dev/null; then
		echo "error: the script is not in a git repo."
		exit 1
	fi
}

check_status()
{
	if [ $? -ne 0 ]; then
		exit $?
	else
		echo "ok"
	fi
}

update()
{
	echo ""
	echo "----------------"

	echo -n "cava: "
	cp $CAVA_SRC $CAVA_DST/
	check_status

	echo -n "fastfetch: "
	cp $FASTFETCH_SRC $FASTFETCH_DST/
	check_status

	echo -n "hypr: "
	cp -r $HYPR_SRC $HYPR_DST/
	check_status

	echo -n "mako: "
	cp $MAKO_SRC $MAKO_DST/
	check_status

	echo -n "scripts: "
	cp -r $SCRIPTS_SRC* $SCRIPTS_DST
	rm -rf $SCRIPTS_DST/theme-switcher/data/__pycache__/
	rm -rf $SCRIPTS_DST/theme-switcher/tmp/
	check_status

	sudo bash -c "cp -r $SHARE_SRC/* $SHARE_DST; \
		chown -R mikolaj *; \
		if [ \$? -ne 0 ]; then echo 'share: error'; exit \$?; else echo 'share: ok'; fi"

	echo -n "waybar: "
	cp $WAYBAR_SRC $WAYBAR_DST/
	check_status

	echo -n "wlogout: "
	cp $WLOGOUT_SRC $WLOGOUT_DST/
	check_status

	echo -n "wofi: "
	cp $WOFI_SRC $WOFI_DST/
	check_status

	echo ""
	echo "----------------"
	git status --ignored
}

# Make sure we are in a git repo
ensure_in_git_repo

echo -e "\e[33mWARNING:\e[0m The script you are trying to execute is an utility meant to be use \e[1;97mEXCLUSIVELY\e[0m by the owner of this repository."
echo "To confirm please input the username of the owner of this repository:"
read input

if [ $input == "tpaau-17DB" ]; then
	echo "Proceeding."
	update
else
	echo "Invalid input."
fi
