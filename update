#!/bin/bash

BOLD_WHITE="\033[1;37m"
BLUE="\033[34m"
YELLOW="\033[33m"
RED="\033[31m"
ESC="\033[0m"

info()
{
	if [[ "$2" == *"\\r"* ]]; then
        echo -en "\r\033[K"
    fi
	echo -e${3} "${2}${BOLD_WHITE}[${ESC}${BLUE}i${ESC}${BOLD_WHITE}]${ESC} ${1}" >&2
}

warning()
{
	if [[ "$2" == *"\\r"* ]]; then
        echo -en "\r\033[K"
    fi
	echo -e${3} "${2}${BOLD_WHITE}[${ESC}${YELLOW}W${ESC}${BOLD_WHITE}]${ESC} ${1}" >&2
}

error()
{
	if [[ "$2" == *"\\r"* ]]; then
        echo -en "\r\033[K"
    fi
	echo -e${3} "${2}${BOLD_WHITE}[${ESC}${RED}E${ESC}${BOLD_WHITE}]${ESC} ${1}" >&2
}

# Exits if the working directory is not in a git repo 
ensure_in_git_repo()
{
	if ! git rev-parse --is-inside-work-tree &>/dev/null; then
		error "Not in a git repo!"
		exit 1
	fi
}

check_status()
{
	if [ $? -ne 0 ]; then
		exit $?
	else
		echo "ok"
	fi
}

update()
{
	source paths.sh

	read -p "Do you want to overwrite the content of '$CONF/'? [y/N]: " choice
	choice="${choice:-N}"
	case "$choice" in
		[Yy]* )
			rm -rf "$CONF/"
		;; [Nn]* )
			info "ok."
			exit 0
		;; * )
			error "Invalid input. Please answer with 'y' or 'n'."
			exit 1
		;;
	esac

	mkdir "$CONF/"

	echo ""
	echo "----------------"

	echo -n "cava: "
	mkdir -p "$CAVA_DST"
	cp "$CAVA_SRC" "$CAVA_DST/"
	check_status

	echo -n "fastfetch: "
	mkdir -p "$FASTFETCH_DST"
	cp "$FASTFETCH_SRC" "$FASTFETCH_DST/"
	check_status

	echo -n "hypr: "
	mkdir -p "$HYPR_DST"
	cp -r "${HYPR_SRC[@]}" "$HYPR_DST/"
	check_status

	echo -n "mako: "
	mkdir -p "$MAKO_DST"
	cp "$MAKO_SRC" "$MAKO_DST/"
	check_status

	echo -n "scripts: "
	mkdir -p "$TP_DST"
	cp -r "$TP_SRC"/* "$TP_DST"
	rm -r "$TP_DST/cache/"
	rm "$TP_DST/colors/current.css"
	check_status

	echo -n "icons: "
	mkdir -p "$ICONS_DST"
	cp -r "$ICONS_SRC"/* "$ICONS_DST"
	check_status

	echo -n "share:"
	mkdir "$SHARE_DST"
	cp -r "$SHARE_SRC"/* "$SHARE_DST"
	check_status

	echo -n "waybar: "
	mkdir -p "$WAYBAR_DST"
	cp "${WAYBAR_SRC[@]}" "$WAYBAR_DST/"
	check_status

	echo -n "wlogout: "
	mkdir -p "$WLOGOUT_DST"
	cp "${WLOGOUT_SRC[@]}" "$WLOGOUT_DST/"
	check_status

	echo -n "wofi: "
	mkdir -p "$WOFI_DST"
	cp "${WOFI_SRC[@]}" "$WOFI_DST/"
	check_status

	echo ""
	echo "----------------"
	git status --ignored
}

# Make sure we are in a git repo
ensure_in_git_repo

info "Type the name of the owner of this repository to continue:"
read input

if [[ "$input" == "tpaau-17DB" ]]; then
	info "Proceeding."
	update
else
	error "wrong"
fi
