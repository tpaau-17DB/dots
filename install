#!/bin/bash

TARGET_PATH="$HOME/.config"
WALLPAPERS_PATH="$HOME/Pictures/wallpapers"

AUR_PACKAGES=$(cat "requirements/arch")

source /etc/os-release

print_usage()
{
	echo "install {args}"
	echo "    --deps: only installs dependencies"
	echo "    --dots: only installs dotfiles"
	echo "    --help: show this message"
}

if [ $# -lt 1 ]; then
	echo "error: expected exactly one argument!"
	echo ""
	print_usage
fi

install_deps()
{
	aur_helper="not found"
	if command -v yay &> /dev/null; then
		aur_helper="yay"
	else
		echo "No supported AUR helpers found."
		echo "You'll have to install following dependencies manually:"
		echo $AUR_PACKAGES
	fi

	echo "Using an AUR helper: $aur_helper"
	$aur_helper -S --needed $AUR_PACKAGES

	if [[ $STATUS -ne 0 ]]; then
		echo "Failed to install some packages using $aur_helper."
		exit 1
	fi
}

install_dots()
{
	echo "Copying files from config/ to $TARGET_PATH"

	mkdir -p $TARGET_PATH/cava/
	cp config/cava/* $TARGET_PATH/cava/

	mkdir -p $TARGET_PATH/fastfetch/
	cp config/fastfetch/* $TARGET_PATH/fastfetch/

	mkdir -p $TARGET_PATH/hypr/
	cp -r config/hypr/* $TARGET_PATH/hypr/

	mkdir -p $TARGET_PATH/kitty/
	cp config/kitty/* $TARGET_PATH/kitty/

	mkdir -p $TARGET_PATH/mako/
	cp config/mako/* $TARGET_PATH/mako/

	mkdir -p $TARGET_PATH/shell-scripts/
	cp -r config/shell-scripts/* $TARGET_PATH/shell-scripts/

	mkdir -p $TARGET_PATH/swaylock/
	cp config/swaylock/* $TARGET_PATH/swaylock/

	mkdir -p $TARGET_PATH/waybar/
	cp config/waybar/* $TARGET_PATH/waybar/

	mkdir -p $TARGET_PATH/wlogout/
	cp config/wlogout/* $TARGET_PATH/wlogout/

	mkdir -p $TARGET_PATH/wofi/
	cp config/wofi/* $TARGET_PATH/wofi/

	echo "Copying wallpapers."
	mkdir -p $HOME/Pictures/wallpapers/
	cp wallpapers/* $WALLPAPERS_PATH

	echo "Copying some files to /usr/share/tpaau-17DB-dots/"
	sudo bash -c "mkdir -p /usr/share/tpaau-17DB-dots/ &&
		cp -r config/usr.share.tpaau-17DB-dots/* /usr/share/tpaau-17DB-dots/"
}

ask_user_deps()
{
	if [[ $ID == "arch" ]]; then
		read -p "The script detected that you use Arch BTW.
	Do you want to automatically install dependencies? [Y/n] " choice
		choice="${choice:-Y}"
		case "$choice" in
			[Yy]* )
				install_deps
			;;
			[Nn]* )
				echo "Got it."
			;;
			* )
				echo "Invalid input. Please answer with 'y' or 'n'."
			exit 1
			;;
		esac
	fi
}

ask_user_dots()
{
	read -p "This script will overwrite some files in '$TARGET_PATH/', '$WALLPAPERS_PATH/' and '/usr/share/tpaau-17DB-dots'.
	Proceed anyway? [y/N] " choice
	choice="${choice:-N}"
	case "$choice" in
		[Yy]* )
			echo "Proceeding."
			install_dots
		;;
		[Nn]* )
			exit 0
		;;
		* )
			echo "Invalid input. Please answer with 'y' or 'n'."
			exit 1
		;;
	esac
}
